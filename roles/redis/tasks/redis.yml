---
- name: Create {{ redis_download_path }} directory
  file: state=directory path={{ redis_download_path }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Create {{ redis_service_name }} run directory
  file: state=directory path=/var/run/{{ redis_service_name }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Create {{ redis_service_name }} installation directory
  file: state=directory path={{ redis_install_dir }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Create {{ redis_service_name }} data directory
  file: state=directory path={{ redis_datadir }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Create {{ redis_service_name }} log directory
  file: state=directory path={{ redis_log_dir }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Downloading {{ redis_service_name }} binary to {{ redis_install_dir }}
  get_url:
    url: "{{ redis_repo_url }}"
    dest: "{{ redis_download_path }}"
  become: true

- name: "Unpack redis"
  unarchive:
    src: "{{ redis_download_path }}/{{ redis_filename }}"
    dest: "{{ redis_download_path }}"
    remote_src: True
  become: true

- name: "Build Redis"
  command: "make"
  args:
    chdir: "{{redis_download_path}}/{{ redis_output_folder}}"
  become: true

- name: "Install Redis"
  command: "make PREFIX={{ redis_install_dir }} install"
  args:
    chdir: "{{redis_download_path}}/{{ redis_output_folder}}"
    creates: "{{ redis_install_dir }}/bin/redis-server"
  become: true

- name: change ownership
  file:
    path: "{{ redis_install_dir }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    recurse: yes
  become: true

- name: Create {{ redis_service_name }} configuration directory
  file: state=directory path={{ redis_conf_dir }} owner={{ redis_user }} group={{ redis_user }}
  become: true

- name: Deploy Redis configuration file
  template:
    src: redis.conf.j2
    dest: "{{redis_conf_dir}}/redis.conf"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  become: true

- name: create redis init script
  template:
    src: "redis.init.d.j2"
    dest: /etc/init.d/redis
    mode: 0755
  become: true

- name: "Enable {{redis_service_name}} as a service"
  systemd:
   name: "{{ redis_service_name }}"
   enabled: yes
   daemon_reload: yes
  become: true